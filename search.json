[{"path":"https://jrs95.github.io/hyprcoloc/articles/hyprcoloc.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"HyPrColoc","text":"HyPrColoc Bayesian divisive clustering algorithm identifying clusters traits colocalize distinct causal variants genomic region. default algorithm can identify clusters putatively colocalized traits within vast collection traits, e.g. 1000s, quickly. set putatively colocalized traits, algorithm outputs: names traits, posterior probability colocalization, location shared putatively causal variant ‘fine-mapping’ probability quantify evidence supporting candidate causal variant causal variant. Traits can either continuous, e.g. blood pressure, discrete, e.g. disease. Basic analyses require information summarized effect estimates (.e. estimated regression coefficients) corresponding standard errors snp genomic region trait consideration. entered numeric matrices. traits measured non-independent studies (.e. containing overlapping participants) analyses can adjusted account . three additional matrices required: () pair-wise marginal correlations traits; (ii) pair-wise LD estimates snps region ; (iii) pair-wise estimates proportion sample overlap study participants. recommend reading note (detail paper) adjusting analyses account correlated summary data -priori trait correlation analyses.","code":""},{"path":"https://jrs95.github.io/hyprcoloc/articles/hyprcoloc.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting started","title":"HyPrColoc","text":"first part exercise begin loading package data needed run analyses using HyPrColoc. given region, standard analysis requires data two matrices, equal size, denoting: () matrix effect estimates (betas), columns denoting study traits rows snps, ; (ii) matrix corresponding standard errors (ses). test dataset ten traits summary association standard error data around 1000 snps. summary association data weakly correlated, owing generating data studies containing overlapping participants (/samples). can call correlation LD matrices typing Note sample data, traits 1-5 form cluster colocalized traits; traits 6-8 form distinct cluster colocalized traits ; traits 9-10 form distinct cluster colocalized traits.","code":"library(hyprcoloc) betas <- hyprcoloc::test.betas head(betas) #>                      T1           T2            T3           T4           T5 #> rs6694014    0.02791630 -0.030353270 -0.0006508550 -0.015820079  0.029344113 #> rs11206477  -0.01333565 -0.007925434 -0.0220791782 -0.024533654 -0.006170044 #> rs978479     0.02789307 -0.031569213  0.0013910408 -0.016449156  0.030562284 #> rs6684892    0.01109516 -0.035811867 -0.0041582437 -0.001093336  0.021029899 #> rs149881092 -0.02058398  0.033028644  0.0732322501 -0.062564186  0.031519527 #> rs2081705    0.02804342 -0.031658194 -0.0006283532 -0.017953736  0.029719314 #>                      T6          T7          T8            T9         T10 #> rs6694014   -0.03739309 -0.05015619 -0.03963766 -0.0497666615 -0.01565694 #> rs11206477   0.08915364  0.08788543  0.07824464 -0.0364999498 -0.07140001 #> rs978479    -0.03667044 -0.04993080 -0.03999140 -0.0485026083 -0.01742117 #> rs6684892   -0.04342024 -0.05462565 -0.02610322 -0.0516383902 -0.01373675 #> rs149881092  0.03339484  0.08794777  0.06747322  0.0002877561 -0.01701753 #> rs2081705   -0.03798465 -0.05052849 -0.04150411 -0.0498085699 -0.01767236 ses <- hyprcoloc::test.ses head(ses) #>                     T1         T2         T3         T4         T5         T6 #> rs6694014   0.01640805 0.01601499 0.01606328 0.01595009 0.01629387 0.01602093 #> rs11206477  0.01522992 0.01486595 0.01490668 0.01480196 0.01512465 0.01484631 #> rs978479    0.01642066 0.01602706 0.01607561 0.01596228 0.01630616 0.01603341 #> rs6684892   0.01738306 0.01696379 0.01701563 0.01689661 0.01726146 0.01696989 #> rs149881092 0.03917473 0.03823671 0.03833955 0.03807307 0.03890204 0.03825441 #> rs2081705   0.01643768 0.01604368 0.01609229 0.01597868 0.01632324 0.01604975 #>                     T7         T8         T9        T10 #> rs6694014   0.01618062 0.01625153 0.01639785 0.01626775 #> rs11206477  0.01499870 0.01506721 0.01522146 0.01508189 #> rs978479    0.01619313 0.01626394 0.01641083 0.01628007 #> rs6684892   0.01713951 0.01721824 0.01737041 0.01723253 #> rs149881092 0.03863522 0.03880163 0.03916327 0.03883610 #> rs2081705   0.01620976 0.01628044 0.01642748 0.01629694 trait.cor <- hyprcoloc::test.corr ld.matrix <- hyprcoloc::test.ld"},{"path":"https://jrs95.github.io/hyprcoloc/articles/hyprcoloc.html","id":"basic-set-up-assuming-independence-between-studies","dir":"Articles","previous_headings":"Getting started","what":"Basic set-up: assuming independence between studies","title":"HyPrColoc","text":"default HyPrColoc assumes trait measured distinct study, .e. participants overlap studies, study estimates regression coefficients (betas) independent. HyPrColoc function automatically employ Bayesian divisive clustering algorithm identify clusters colocalized traits. study (trait) assigned name corresponding column position similarly snps assigned names according row position. input trait snp labels make use “trait.names” “snp.id” variables, e.g.  output see , iteration algorithm, HyPrColoc returns: cluster putatively colocalized traits posterior probability traits colocalized ‘regional association’ probability* (always > posterior probability) candidate causal variant explaining shared association proportion posterior probability explained variant (represents HyPrColoc multi-trait fine-mapping probability). *Note ‘large’ regional association probability evidence one snps region shared associations across traits, result similar PheWAS (Phenome-wide association study) discuss later. results show three iterations HyPrColoc identified traits 1-5 form cluster colocalized traits, traits 6-8 form separate cluster colocalized traits finally traits 9 10 also colocalize. see cluster traits 1-5 posterior probability \\(1\\) colocaized, hence regional association probability also \\(1\\) candidate snp rs11591147 explains 100% posterior. Thus, strong support traits 1-5 colocalize rs11591147 taken candidate causal snp region. hand, traits 9 10 show strong evidence colocalizing, posterior probability \\(0.9\\), weak evidence support rs7524677 causal snp region. example helps illustrate : cluster traits can show strong evidence colocalization, snp likely explain colocalization traits can vague. assess detail later, considering credible sets snps explain colocalization signal (cluster traits) c.f. section “Computing credible set snps cluster colocalized traits”.","code":"traits <- paste0(\"T\", 1:dim(betas)[2]) rsid <- rownames(betas) res <- hyprcoloc(betas, ses, trait.names = traits, snp.id = rsid) res #> $results #>   iteration             traits posterior_prob regional_prob candidate_snp #> 1         1 T1, T2, T3, T4, T5         1.0000             1    rs11591147 #> 2         2         T6, T7, T8         0.9164             1    rs12117612 #> 3         3            T9, T10         0.9018             1     rs7524677 #>   posterior_explained_by_snp dropped_trait #> 1                     1.0000            NA #> 2                     0.4197            NA #> 3                     0.0763            NA #>  #> attr(,\"class\") #> [1] \"hyprcoloc\""},{"path":"https://jrs95.github.io/hyprcoloc/articles/hyprcoloc.html","id":"labelling-a-trait-as-either-continuous-or-binary-in-analyses","dir":"Articles","previous_headings":"Getting started > Basic set-up: assuming independence between studies","what":"Labelling a trait as either continuous or binary in analyses","title":"HyPrColoc","text":"technical reasons, analyses dependence whether trait continuous binary. let HyPrColoc know traits continuous (coded 0) binary (coded 1) use “binary.outcome” variable. example, suppose first three traits binary, type","code":"binary.traits <- c(1, 1, 1, rep(0, dim(betas)[2] - 3)) res <- hyprcoloc(betas, ses, trait.names = traits, snp.id = rsid, binary.outcomes = binary.traits) res #> $results #>   iteration             traits posterior_prob regional_prob candidate_snp #> 1         1 T1, T2, T3, T4, T5         1.0000             1    rs11591147 #> 2         2         T6, T7, T8         0.9164             1    rs12117612 #> 3         3            T9, T10         0.9018             1     rs7524677 #>   posterior_explained_by_snp dropped_trait #> 1                     1.0000            NA #> 2                     0.4197            NA #> 3                     0.0763            NA #>  #> attr(,\"class\") #> [1] \"hyprcoloc\""},{"path":"https://jrs95.github.io/hyprcoloc/articles/hyprcoloc.html","id":"choosing-a-subset-of-traits-to-analyze","dir":"Articles","previous_headings":"Getting started > Basic set-up: assuming independence between studies","what":"Choosing a subset of traits to analyze","title":"HyPrColoc","text":"can choose assess evidence colocalization across subset traits. example, let’s suppose interest lies assessing first two traits , situation make use “trait.subset” variable, e.g.","code":"res <- hyprcoloc(betas, ses, trait.names = traits, snp.id = rsid, trait.subset = c(\"T1\", \"T2\")) res #> $results #>   iteration traits posterior_prob regional_prob candidate_snp #> 1         1 T1, T2              1             1    rs11591147 #>   posterior_explained_by_snp dropped_trait #> 1                          1            NA #>  #> attr(,\"class\") #> [1] \"hyprcoloc\""},{"path":"https://jrs95.github.io/hyprcoloc/articles/hyprcoloc.html","id":"computing-a-credible-set-of-snps-for-each-cluster-of-colocalized-traits","dir":"Articles","previous_headings":"Getting started","what":"Computing a credible set of snps for each cluster of colocalized traits","title":"HyPrColoc","text":"output fine-mapping score, .e. probability snp likley causal, snps region make use “snpscores” variable analyses. HyPrColoc outputs ‘list’ results first element contains results displayed previously second element containts snp scores clusters colocalized traits identified. Let’s look, now type res list two elements: “res[[1]]” “res[[2]]”. element “res[[1]]” contains results , .e. present example, “res[[2]]” list length 3 containing snp scores 3 clusters colocalized traits (presented order clusters “res[[1]]”), .e “res[[2]][[1]]” vector element vector denotes probability given snp causal variant cluster traits 1-5. “res[[2]][[2]]” returns information now cluster putatively colocalized traits 6-8 “res[[2]][[3]]” cluster 9-10. example, first snp scores cluster 1 (traits 1-5) : HyPrColoc inbuilt function triage information “credible set” snps cluster uses output “hyprcoloc” function “snpsocres = TRUE”. default, function identifies credible set snps explains 95% posterior probability colocalization cluster colocalized traits. using “cred.sets” function, .e. see snp “rs11591147” explains ‘’ posterior probability colocalization cluster traits 1-5. therefore strong candidate causal variant region. However, second cluster traits (6-8), clear candidate causal variante “rs12117612” “rs7532349” explain equal amounts posterior probability colocalization , now show, perfect LD one another: Together two variants explain nearly 90% posterior probability colocalization therefore likely* traits colocalize, however impossible (using HyPrColoc) prioritise one variants . prioritise one snps external information need integrated, can (e.g.) biological information adding another layer analysis trait, traits, measured different studies. *One natural question ask : two snps perfect LD deduced traits colocalize? result consequence choice prior probability colocalization. number causal configurations reflect colocalization traits much (much!) smaller configurations represent colocalization traits. means set prior configuration probabilities equal almost certainly never identify colocalization traits, even shared associations traits truly owing colocalization mechanism. Thus, colocalization causal confiugration prior must larger non-colocalization causal configuration prior general (discovery) analyses. much larger? simple answer . complicated therefore dedicate time discuss now.","code":"res <- hyprcoloc(betas, ses, trait.names = traits, snp.id = rsid, snpscores = TRUE) res[[1]] #>   iteration             traits posterior_prob regional_prob candidate_snp #> 1         1 T1, T2, T3, T4, T5         1.0000             1    rs11591147 #> 2         2         T6, T7, T8         0.9164             1    rs12117612 #> 3         3            T9, T10         0.9018             1     rs7524677 #>   posterior_explained_by_snp dropped_trait #> 1                     1.0000            NA #> 2                     0.4197            NA #> 3                     0.0763            NA head(res[[2]][[1]]) #>    rs6694014   rs11206477     rs978479    rs6684892  rs149881092    rs2081705  #> 4.109458e-67 3.004278e-68 5.637121e-67 6.486572e-68 6.063410e-66 5.765875e-67 cred.sets(res, value = 0.95) #> [[1]] #> rs11591147  #>          1  #>  #> [[2]] #>  rs12117612   rs7532349  rs11206481  rs12145624  rs12724445  rs12126037  #> 0.419677651 0.419677651 0.025324539 0.022969148 0.022969148 0.022332481  #>  rs13375783   rs1544909  #> 0.014513746 0.009991906  #>  #> [[3]] #>  rs7524677  rs7547776  rs7524783  rs6701789  rs1035817  rs7530321  rs7520033  #> 0.07626197 0.07626197 0.07626197 0.07626197 0.07626197 0.05349125 0.05349125  #>  rs7553410 rs11206486  rs7524899  rs6681189  rs7537797 rs11206485 rs10888890  #> 0.05349125 0.02231383 0.02231383 0.02231383 0.02231383 0.02098626 0.02098626  #>  rs2114574  rs6664660  rs6588539 rs11206489  rs6668051 rs10218512 rs11206492  #> 0.02098626 0.02098626 0.02098626 0.02098626 0.02098626 0.02098626 0.02098626  #>  rs4634950  rs7539163  rs7529244  rs6687414  rs7538808 rs11206487 rs12745865  #> 0.02098626 0.02098626 0.02098626 0.02098626 0.02098626 0.01203687 0.01203687  #> rs12725873  #> 0.01203687 ld.matrix[\"rs12117612\", \"rs7532349\"] #> [1] 1"},{"path":"https://jrs95.github.io/hyprcoloc/articles/hyprcoloc.html","id":"an-analysis-protocol-assessing-stability-of-clusters-via-a-sensitivity-analysis","dir":"Articles","previous_headings":"","what":"An analysis protocol: assessing stability of clusters via a sensitivity analysis","title":"HyPrColoc","text":"important users software ackowledge performance HyPrColoc particularly dependendant choice prior configuration probabilities used (associated hyper-parameters) well choice regional alignment thresholds, combine quantify lower bound accept cluster traits colocalize (.e. clusters identified \\(P_RP_{}\\geq P^{\\ast}_{R}P^{\\ast}_{}\\)). situations senstivity might modest, whilst others might large. example, extensive simulations, note analysis large numbers traits, using default algorithm settings, can regularly result trait clusters containing (typically single) false positive. Avoiding issue complex unlikely exists one-size-fits-approach setting prior configuration probabilities likewise regional alignment threshold parameters. Hence, go someway addressing issues provide analysis protocol template, assess strength conclusions. end section introduce function “sensitivity.plot” , varying input values regional alignment thresholds well prior probability colocalization, returns heat-map helps us visuale stable clusters colocalized traits variations algorithms input parameters. expect function part standard analyses, helping users pinpoint best candidate clusters colocalized traits follow-analyses.","code":""},{"path":"https://jrs95.github.io/hyprcoloc/articles/hyprcoloc.html","id":"assessing-sensitivity-to-changes-in-the-prior-configuration-parameters","dir":"Articles","previous_headings":"An analysis protocol: assessing stability of clusters via a sensitivity analysis","what":"Assessing sensitivity to changes in the prior configuration parameters","title":"HyPrColoc","text":"important feature HyPrColoc software allows sensitivity choice causal configuration priors assessed. Two prior choices presented: () conditionally uniform priors, assumes causal configurations relating given hypotheses equally likely, ; (ii) variant specific prioris, , variant, focuses tuning probability variant colocalized subset traits, possible subsets. HyPrColoc dependency type prior configuration assumed parameters associated prior set-. section aim outline approach assessing sensitivity choices moreover guidance drawing conclusions sesnsitivity analyses. HyPrColoc jointly assesses colocalization across multiple traits use detail advantage sensitivity analyses. general principle follows: perform two analyses probability variant associated one trait decreases assessment compute number traits within cluster overlapp analyses. overlap collection traits within cluster, use different choices prior paramater values, ‘stable’ cluster colocalized traits. might wish collection putatively colocalized traits identified primary analyses (may may use default settings) repeat whole analysis different parameter specification.","code":""},{"path":"https://jrs95.github.io/hyprcoloc/articles/hyprcoloc.html","id":"conditionally-uniform-configuration-priors","dir":"Articles","previous_headings":"An analysis protocol: assessing stability of clusters via a sensitivity analysis > Assessing sensitivity to changes in the prior configuration parameters","what":"Conditionally uniform configuration priors:","title":"HyPrColoc","text":"conditionally uniform prior assigns non-null hypotheses (.e. least one trait causal variant region) probaility. Note mean causal configuration prior probailities , rather prior probabilities causal configuration associated distinct hypothesis must add amount. means conditionally uniform prior benefits automatically adjusting number traits number snps included analyses. approach requires specificying one parameter , “prior.1”, ratio prior probability hypothesis least one trait causal variant region \\(P(H_{j})\\) divided null-hypothesis traits causal variant region \\(P(H_{0})\\), .e. \\(prior.1 = \\frac{P(H_{j})}{P(H_{0})}\\). default, set \\(prior.1=10^{-4}\\), non-null hypothesis 10000 times less likely -priori relative null hypothesis. default choice \\(10^{-4}\\) motivated part role \\(p1\\) widely used sofwtare “COLOC”, \\(p1\\) prior prbability snp causally associated one trait region whereas \\(prior.1\\) can thought prior probability hypothesis, least one trait causal variant region. number traits sample increases default choice \\(prior.1\\) may become increasingly inappropriate. therefore important explore sensitivity results specification “prior.1” now . number traits test dataset ‘small’, choose repeatedly run HyPrColoc run change value \\(prior.1\\{10^{-4}, 10^{-10}, 10^{-20}, 10^{-25}, 10^{-100}}\\). number traits sample large might consider selecting cluster traits assess cluster stability. results reveal : sample dataset provided using conditionally uniform priors, results HyPrColoc weakly dependendent specification “prior.1”. particular, across range \\(prior.1 \\[10^{-4}, 10^{-20}]\\) HyPrColoc results change beyond fourth decimal place. might conclude therefore three clusters traits 1-5; 6-8 separately 9-10 stable clusters colocalized traits. \\(prior.1 = 10^{-25}\\) cluster traits \\(1-5\\) deemed colocalize \\(prior.1 = 10^{-100}\\) traits deemed colocalize. , none traits truly colocalize? , noted specified values \\(prior.1\\{10^{-4}, 10^{-10}, 10^{-20}, 10^{-25}, 10^{-100}}\\) ‘reasonable’ values assess prior sensitivty, rather test dataset tried find value, .e. \\(prior.1=10^{-25}\\), evidence supporting traits forming clusters colocalized traits ‘small’ fail detect colocalization traits. practice absence prior belief concerning \\(prior.1\\), reasonable choice depend number traits consideration. However, guide analyses suggest comparing results using default \\(10^{-4}\\) \\(prior.1 = 10^{-5}\\), .e. order magnitude reduction “prior.c”, sensitivity analyses. Note , using conditionally uniform prior default \\(prior.1=10^{-4}\\), posterior probabilities computed cluster colocalized traits larger computed using default parameters values variant specific prior configuration set-; now illustrate .","code":"prior.options <- c(1e-4, 1e-10, 1e-20, 1e-25, 1e-100) for (i in prior.options) {   res <- hyprcoloc(betas, ses,     trait.names = traits, snp.id = rsid,     uniform.priors = TRUE, prior.1 = i, reg.steps = 2   )   print(paste0(\"prior.1 = \", i))   print(res) } #> [1] \"prior.1 = 1e-04\" #> $results #>   iteration             traits posterior_prob regional_prob candidate_snp #> 1         1 T1, T2, T3, T4, T5         1.0000             1    rs11591147 #> 2         2         T6, T7, T8         0.9888             1    rs12117612 #> 3         3            T9, T10         0.9799             1     rs7524677 #>   posterior_explained_by_snp dropped_trait #> 1                     1.0000            NA #> 2                     0.4197            NA #> 3                     0.0763            NA #>  #> attr(,\"class\") #> [1] \"hyprcoloc\" #> [1] \"prior.1 = 1e-10\" #> $results #>   iteration             traits posterior_prob regional_prob candidate_snp #> 1         1 T1, T2, T3, T4, T5         1.0000             1    rs11591147 #> 2         2         T6, T7, T8         0.9888             1    rs12117612 #> 3         3            T9, T10         0.9799             1     rs7524677 #>   posterior_explained_by_snp dropped_trait #> 1                     1.0000            NA #> 2                     0.4197            NA #> 3                     0.0763            NA #>  #> attr(,\"class\") #> [1] \"hyprcoloc\" #> [1] \"prior.1 = 1e-20\" #> $results #>   iteration             traits posterior_prob regional_prob candidate_snp #> 1         1 T1, T2, T3, T4, T5         1.0000        1.0000    rs11591147 #> 2         2         T6, T7, T8         0.9887        1.0000    rs12117612 #> 3         3            T9, T10         0.9797        0.9998     rs7524677 #>   posterior_explained_by_snp dropped_trait #> 1                     1.0000            NA #> 2                     0.4197            NA #> 3                     0.0763            NA #>  #> attr(,\"class\") #> [1] \"hyprcoloc\" #> [1] \"prior.1 = 1e-25\" #> $results #>   iteration             traits posterior_prob regional_prob candidate_snp #> 1         1 T1, T2, T3, T4, T5              1         1.000    rs11591147 #> 2         2               None             NA         0.000          <NA> #> 3         3               None             NA         0.046          <NA> #> 4         4               None             NA         0.000          <NA> #> 5         5               None             NA         0.000          <NA> #>   posterior_explained_by_snp dropped_trait #> 1                          1          <NA> #> 2                         NA            T7 #> 3                         NA           T10 #> 4                         NA            T8 #> 5                         NA            T9 #>  #> attr(,\"class\") #> [1] \"hyprcoloc\" #> [1] \"prior.1 = 1e-100\" #> $results #>   iteration traits posterior_prob regional_prob candidate_snp #> 1         1   None             NA             0            NA #> 2         2   None             NA             0            NA #> 3         3   None             NA             0            NA #> 4         4   None             NA             0            NA #> 5         5   None             NA             0            NA #> 6         6   None             NA             0            NA #> 7         7   None             NA             0            NA #> 8         8   None             NA             0            NA #> 9         9   None             NA             0            NA #>   posterior_explained_by_snp dropped_trait #> 1                         NA            T1 #> 2                         NA            T4 #> 3                         NA            T7 #> 4                         NA           T10 #> 5                         NA            T2 #> 6                         NA            T8 #> 7                         NA            T3 #> 8                         NA            T9 #> 9                         NA            T5 #>  #> attr(,\"class\") #> [1] \"hyprcoloc\""},{"path":"https://jrs95.github.io/hyprcoloc/articles/hyprcoloc.html","id":"variant-specific-configuration-priors-default","dir":"Articles","previous_headings":"An analysis protocol: assessing stability of clusters via a sensitivity analysis > Assessing sensitivity to changes in the prior configuration parameters","what":"Variant specific configuration priors (default):","title":"HyPrColoc","text":"variant specific causal configuration priors HyPrColoc , sense, multi-trait extention causal configuration priors used COLOC (two traits identical). Users familiar COLOC software doubt know performance COLOC sensitive choice causal configuration prior parameters. HyPrColoc multi-trait extention prior set-also sensitive choice prior parameters. HyPrColoc variant specific priors require specification two parameters: “prior.1” “prior.c”. parameter “prior.1” denotes probability snp associated single trait. “prior.c” conditional colocalization prior. write \\(prior.c = 1-prior.2\\), : () \\(1-prior.2\\) prior probaility snp associated additonal trait given associated one trait; (ii) \\(1-(prior.2)^2\\) prior probability snp associated third trait given associated two traits; (iii) \\(1-(prior.2)^3\\) prior probability snp associated fourth trait given three … default \\(prior.1 = 10^{-4}\\), hence prior probability snp ssociated single trait 1 10000 (matching used COLOC). default \\(prior.c = 0.02\\), meaning prior probability snp associated second trait, conditional association one trait, 1 50; prior probaility associated third trait given association two traits around 1 25; … Notice marginal probability snp associated increasing number traits always small monotonic decreasing, e.g. \\(\\frac{1}{10^{4}*50*25*\\dots}\\). using variant specific prior, results tend sensitive choice \\(prior.c\\) controls prior probability additional colocalized trait. Hence, focus sensitivity analysis varying parameter. consider range values \\(prior.c \\\\{0.05, 0.02, 0.01, 0.005\\}\\), meaning probability snp associated second trait given association one trait can : () 1 20, .e. \\(prior.c=0.05\\); (ii) 1 50, .e. \\(prior.c=0.02\\); (iii) 1 100, .e. \\(prior.c=0.01\\); (ii) 1 200, .e. \\(prior.c=0.005\\), results indicate traits 1-5 appear form ‘stable’ cluster colocalized traits, .e. across range prior probabilities considered traits 1-5 always colocalize. two separate clusters comprising traits 6-8 traits 9-10, results differ depending choice \\(prior.c\\). Firstly, note posterior probability colocalization clusters decreases function \\(prior.c\\), reduction clusters cluster sizes differ. , \\(prior.c \\\\{0.05, 0.02, 0.01\\}\\) posterior probability cluster size three (traits 6-8) decreases \\(0.964\\) \\(0.846\\), whereas cluster size two (traits 9-10) reduces \\(0.958\\) \\(0.821\\). summary, larger number traits cluster less sensitive results specification \\(prior.c\\). see positive feature HyPrColoc variant specific prior. However, \\(prior.c\\) reduced order magnitude \\(10^{-2}\\) \\(10^{-3}\\), .e. drop 1 100 1 1000, note two clusters traits (6-8 9-10) traits 7-8 appear colocalize posterior probability colocalization weaker \\(0.739\\). absense prior belief concerning \\(prior.c\\), reasonable value \\(prior.c\\) depend number traits consideration. guide, suggested assessing results \\(prior.c\\\\{0.02, 0.01\\}\\), .e. HyPrColoc default considering probability snp additional association given association one trait 1 100 (“sensitivity.plot” function ). One additional point consider evidential strength, look output setting \\(prior.c\\\\{0.02, 0.01\\}\\), note posterior probability colocalization traits clusters 6-8 9-10 fall \\(0.85\\). Thus, setting stringent threshold colocalization traits, e.g. return results cluster traits colocalize posterior probability \\(0.85\\), necessarily alter results presented HyPrColoc; now demonstrate.","code":"prior.1 <- 1e-4 prior.c.options <- c(0.05, 0.02, 0.01, 0.005) for (i in prior.c.options) {   res <- hyprcoloc(betas, ses,     trait.names = traits, snp.id = rsid,     uniform.priors = FALSE, prior.1 = prior.1, prior.c = i   )   print(c(paste0(\"prior.1 = \", prior.1), paste0(\"prior.c = \", i)))   print(res) } #> [1] \"prior.1 = 1e-04\" \"prior.c = 0.05\"  #> $results #>   iteration             traits posterior_prob regional_prob candidate_snp #> 1         1 T1, T2, T3, T4, T5         1.0000             1    rs11591147 #> 2         2         T6, T7, T8         0.9643             1    rs12117612 #> 3         3            T9, T10         0.9582             1     rs7524677 #>   posterior_explained_by_snp dropped_trait #> 1                     1.0000            NA #> 2                     0.4197            NA #> 3                     0.0763            NA #>  #> attr(,\"class\") #> [1] \"hyprcoloc\" #> [1] \"prior.1 = 1e-04\" \"prior.c = 0.02\"  #> $results #>   iteration             traits posterior_prob regional_prob candidate_snp #> 1         1 T1, T2, T3, T4, T5         1.0000             1    rs11591147 #> 2         2         T6, T7, T8         0.9164             1    rs12117612 #> 3         3            T9, T10         0.9018             1     rs7524677 #>   posterior_explained_by_snp dropped_trait #> 1                     1.0000            NA #> 2                     0.4197            NA #> 3                     0.0763            NA #>  #> attr(,\"class\") #> [1] \"hyprcoloc\" #> [1] \"prior.1 = 1e-04\" \"prior.c = 0.01\"  #> $results #>   iteration             traits posterior_prob regional_prob candidate_snp #> 1         1 T1, T2, T3, T4, T5         1.0000             1    rs11591147 #> 2         2         T6, T7, T8         0.8464             1    rs12117612 #> 3         3            T9, T10         0.8211             1     rs7524677 #>   posterior_explained_by_snp dropped_trait #> 1                     1.0000            NA #> 2                     0.4197            NA #> 3                     0.0763            NA #>  #> attr(,\"class\") #> [1] \"hyprcoloc\" #> [1] \"prior.1 = 1e-04\" \"prior.c = 0.005\" #> $results #>   iteration             traits posterior_prob regional_prob candidate_snp #> 1         1 T1, T2, T3, T4, T5         1.0000             1    rs11591147 #> 2         2         T6, T7, T8         0.7342             1    rs12117612 #> 3         3            T9, T10         0.6965             1     rs7524677 #>   posterior_explained_by_snp dropped_trait #> 1                     1.0000            NA #> 2                     0.4197            NA #> 3                     0.0763            NA #>  #> attr(,\"class\") #> [1] \"hyprcoloc\""},{"path":"https://jrs95.github.io/hyprcoloc/articles/hyprcoloc.html","id":"evidential-strength-and-the-regional-and-alignment-thresholds","dir":"Articles","previous_headings":"An analysis protocol: assessing stability of clusters via a sensitivity analysis > Assessing sensitivity to changes in the prior configuration parameters","what":"Evidential strength and the regional and alignment thresholds","title":"HyPrColoc","text":"HyPrColoc estimates posterior probability colocalization cluster traits multiplying regional association probability \\(P_{R}\\) alignment probability \\(P_{}\\), .e. \\(P_{R}*P_{}\\). algorithm concludes cluster traits colocalize values two threshold values: regional probability threshold \\(P_{R}^{\\ast}\\) alignment probability threshold \\(P_{}^{\\ast}\\). noted previous section, posterior probability can vary choice configuration priors used. Consequently, default regional alignment thresholds vary using either conditionally uniform configuration priors, .e. \\(P_R^{\\ast}=P_{}^{\\ast}=0.7\\), variant specific priors, .e. \\(P_R^{\\ast}=P_{}^{\\ast}=0.5\\). Accordingly, algorithm deduce set traits colocalized \\(P_RP_{}\\geq 0.49\\) using CU priors \\(P_RP_{}\\geq 0.25\\) using VS priors. Note, parameter choices consequence extensive testing simulation scenarios, aiming maximise true detection rate whilst minimising number false positives. therefore recommend reducing value either parameters. defaults viewed lower bounds. interest lies identifying sets colocalized traits certain posterior probability, stringent regional alignment threshold parameters can chosen. example set \\(P_R^{\\ast}=P_{}^{\\ast}=0.95\\) colocalized traits identified \\(P_RP_{}\\geq 0.9025\\) see Hence, identify clusters traits strong evidence colocalizing traits 1-5 separately 7-8. However, might notice previous assessment data traits 6-8 colocalized posterior probability \\(0.916\\) traits 9-10 posterior probability \\(0.902\\). Traits 9-10 fall posterior threshold, however traits 6-8 . set \\(P_R^{\\ast}=P_{}^{\\ast}=0.95\\) identify full cluster 6-8 rather just 7-8? answer posterior probability traits 6-8 colocalizing \\(0.916\\) either regional alignment probability larger threshold \\(0.95\\) (trait 6 included cluster). situation algorithm fail identify maximum number clusters traits colocalize \\(0.902\\). extensive testing HyPrColoc algorithm noticed can avoid instead set regional alignment statistics minimum posterior probability determines cluster traits colocalized. Hence, example instead set \\(P_R^{\\ast}=P_{}^{\\ast}=0.9025\\), .e.  returns full cluster traits 6-8. results explains default values \\(P_R^{\\ast}\\) \\(P_{}^{\\ast}\\) set ‘equal’ ‘’ reflect minimum probability accept clocalization, product \\(P_{R}*P_{}\\).","code":"res <- hyprcoloc(betas, ses,   trait.names = traits, snp.id = rsid, uniform.priors = FALSE,   reg.thresh = 0.95, align.thresh = 0.95 ) res #> $results #>   iteration             traits posterior_prob regional_prob candidate_snp #> 1         1 T1, T2, T3, T4, T5         1.0000        1.0000    rs11591147 #> 2         2             T7, T8         0.9827        1.0000    rs12117612 #> 3         3               None             NA        1.0000          <NA> #> 4         4               None             NA        0.9653          <NA> #>   posterior_explained_by_snp dropped_trait #> 1                      1.000          <NA> #> 2                      0.428          <NA> #> 3                         NA           T10 #> 4                         NA            T9 #>  #> attr(,\"class\") #> [1] \"hyprcoloc\" res <- hyprcoloc(betas, ses,   trait.names = traits, snp.id = rsid, uniform.priors = FALSE,   reg.thresh = 0.9025, align.thresh = 0.9025 ) res #> $results #>   iteration             traits posterior_prob regional_prob candidate_snp #> 1         1 T1, T2, T3, T4, T5         1.0000             1    rs11591147 #> 2         2         T6, T7, T8         0.9164             1    rs12117612 #> 3         3               None             NA             1          <NA> #>   posterior_explained_by_snp dropped_trait #> 1                     1.0000          <NA> #> 2                     0.4197          <NA> #> 3                         NA           T10 #>  #> attr(,\"class\") #> [1] \"hyprcoloc\""},{"path":"https://jrs95.github.io/hyprcoloc/articles/hyprcoloc.html","id":"analysis-protocol-a-one-stop-sensitivity-assessment","dir":"Articles","previous_headings":"An analysis protocol: assessing stability of clusters via a sensitivity analysis > Assessing sensitivity to changes in the prior configuration parameters","what":"Analysis protocol: a one stop sensitivity assessment","title":"HyPrColoc","text":"discussed , results colocalization analyses might sensitive choice : () algorithm thresholds, .e. colocalization cut-\\(=P^{\\ast}_{R}*P^{\\ast}_{}\\), ; (ii) prior belief traits sharing causal variant. therefore essential explore sensitivity, particularly aiming identify reliable candidate clusters colocalized traits. HyPrColoc allows single function “sensitivity.plot”. function repeatedly calls “hyprcoloc” various user defined choices regional alignment thresholds well colocalization prior (“prior.c”). default values parameters start algorithms default settings increase identification clusters colocalized traits becomes challenging (.e. traits must stronger evidence colocalization order detected). example  output heat-map helps us visualise clusters colocalised traits. Traits cluster across values considered given score 1 traits never cluster given score 0; traits ocassionally cluster score 0 1. Hence, confidence cluster increases increasing score - appearing darker block clustered traits heat-map. heat-map reflects already seen individual analyses: traits 1-5 form strong cluster colocalized traits; traits 6-8 form second cluster, however certain values input parameters trait 6 dropped cluster ; traits 9-10 form thrid cluster, however identification cluster difficult stringent values thresholds prior probability colocalization. clear figure three distinct clusters colocalized traits sample, matching true data generating mechanism. However, confident clusters colocalised traits traits 1-5 separately traits 7-8. Although set benchmark quite high, two clusters 6-8 9-10 present around 70% (sensitivity) scenarios considered making reasonable candidates also. see can require “sensitivity.plot” returns similarity matrix used plot heat-map:  se 75% scenarios traits 6-8 form cluserter colocalized traits around 67% scenarios traits 9-10 form cluster colocalized traits.","code":"sensitivity.plot(betas, ses,   trait.names = traits, snp.id = rsid,   reg.thresh = c(0.6, 0.7, 0.8, 0.9), align.thresh = c(0.6, 0.7, 0.8, 0.9), prior.c = c(0.02, 0.01, 0.005), equal.thresholds = FALSE ) # Or by fixing the regional and aligment thresholds to be equal # sensitivity.plot(betas, ses, trait.names = traits, snp.id=rsid, #                  reg.thresh = c(0.6,0.7,0.8,0.9), prior.c = c(0.02, 0.01, 0.005), equal.thresholds = TRUE); res <- sensitivity.plot(betas, ses,   trait.names = traits, snp.id = rsid,   reg.thresh = c(0.6, 0.7, 0.8, 0.9), align.thresh = c(0.6, 0.7, 0.8, 0.9), prior.c = c(0.02, 0.01, 0.005), equal.thresholds = FALSE, similarity.matrix = TRUE ) # heatmap is found by typing heatmap.plot <- res[[1]] # (plotted previously) # similarity matrix is found by typing sim.mat <- res[[2]] sim.mat #>     T1 T2 T3 T4 T5   T6   T7   T8        T9       T10 #> T1   1  1  1  1  1 0.00 0.00 0.00 0.0000000 0.0000000 #> T2   1  1  1  1  1 0.00 0.00 0.00 0.0000000 0.0000000 #> T3   1  1  1  1  1 0.00 0.00 0.00 0.0000000 0.0000000 #> T4   1  1  1  1  1 0.00 0.00 0.00 0.0000000 0.0000000 #> T5   1  1  1  1  1 0.00 0.00 0.00 0.0000000 0.0000000 #> T6   0  0  0  0  0 1.00 0.75 0.75 0.0000000 0.0000000 #> T7   0  0  0  0  0 0.75 1.00 1.00 0.0000000 0.0000000 #> T8   0  0  0  0  0 0.75 1.00 1.00 0.0000000 0.0000000 #> T9   0  0  0  0  0 0.00 0.00 0.00 1.0000000 0.6666667 #> T10  0  0  0  0  0 0.00 0.00 0.00 0.6666667 1.0000000"},{"path":"https://jrs95.github.io/hyprcoloc/articles/hyprcoloc.html","id":"the-bayesian-divisive-clustering-algorithm","dir":"Articles","previous_headings":"An analysis protocol: assessing stability of clusters via a sensitivity analysis","what":"The Bayesian divisive clustering algorithm","title":"HyPrColoc","text":"Bayesian divisive clustering algorithm identifies clusters colocalized traits sample. algorithm automatically used traits identified sharing causal variant. iteration algorithm, goal identify subset traits greatest evidence colocalization. HyPrColoc using one two (user defined) approaches: () regional (ii) alignment selection. regional selection criterion computed collection hypotheses assume traits colocalize one traits causal variant region. alignment selection criterion, however, computed hypotheses assume traits colocalize one traits causal variant elsewhere region. alignment selection process searches much larger amount causal configuration space thus computationally expensive (potentially robust) regional selection. Typically, strategies perform similarly therefore chose regional selection default setting.","code":""},{"path":"https://jrs95.github.io/hyprcoloc/articles/hyprcoloc.html","id":"assessing-differences-between-the-bayesian-divisive-clustering-criteria","dir":"Articles","previous_headings":"An analysis protocol: assessing stability of clusters via a sensitivity analysis > The Bayesian divisive clustering algorithm","what":"Assessing differences between the Bayesian divisive clustering criteria","title":"HyPrColoc","text":"regional selection criterion: alignment selection criterion: Hence, test dataset difference results using either reginoal alignment selection criterion.","code":"res <- hyprcoloc(betas, ses, trait.names = traits, snp.id = rsid, bb.selection = \"regional\") res #> $results #>   iteration             traits posterior_prob regional_prob candidate_snp #> 1         1 T1, T2, T3, T4, T5         1.0000             1    rs11591147 #> 2         2         T6, T7, T8         0.9164             1    rs12117612 #> 3         3            T9, T10         0.9018             1     rs7524677 #>   posterior_explained_by_snp dropped_trait #> 1                     1.0000            NA #> 2                     0.4197            NA #> 3                     0.0763            NA #>  #> attr(,\"class\") #> [1] \"hyprcoloc\" res <- hyprcoloc(betas, ses, trait.names = traits, snp.id = rsid, bb.selection = \"align\") res #> $results #>   iteration             traits posterior_prob regional_prob candidate_snp #> 1         1 T1, T2, T3, T4, T5         1.0000             1    rs11591147 #> 2         2         T6, T7, T8         0.9164             1    rs12117612 #> 3         3            T9, T10         0.9018             1     rs7524677 #>   posterior_explained_by_snp dropped_trait #> 1                     1.0000            NA #> 2                     0.4197            NA #> 3                     0.0763            NA #>  #> attr(,\"class\") #> [1] \"hyprcoloc\""},{"path":"https://jrs95.github.io/hyprcoloc/articles/hyprcoloc.html","id":"switching-the-algorithm-off","dir":"Articles","previous_headings":"An analysis protocol: assessing stability of clusters via a sensitivity analysis > The Bayesian divisive clustering algorithm","what":"Switching the algorithm off","title":"HyPrColoc","text":"can choose switch Bayesian divisive clustering algorithm assess whether traits colocalize.","code":"res <- hyprcoloc(betas, ses, trait.names = traits, snp.id = rsid, bb.alg = FALSE) res #> $results #>                                    traits posterior_prob regional_prob #> 1 T1, T2, T3, T4, T5, T6, T7, T8, T9, T10              0        0.0132 #>   candidate_snp posterior_explained_by_snp #> 1    rs11591147                          1 #>  #> attr(,\"class\") #> [1] \"hyprcoloc\""},{"path":"https://jrs95.github.io/hyprcoloc/articles/hyprcoloc.html","id":"mapping-pleiotropy-an-alternative-to-phewas","dir":"Articles","previous_headings":"","what":"Mapping pleiotropy: an alternative to PheWAS","title":"HyPrColoc","text":"regional association can used alternative PheWAS assessment. see , first discuss regional association probability computed. \\(Q\\) snps region, compute probability snp associated traits divide sum probabilities : () one \\(Q\\) snps associated traits; (ii) one snps associated one trait; (iii) one snps associated two traits … Notably restriction number causal variants region regional association assessment. ‘large’ (close 1) regional association probability indicates one snps region share association traits. may owing one shared causal variants traits traits one causal variants least one causal variant per trait strong LD causal variant traits. Small values indicate snp region associated traits, preclude possibly one snps might associated subset traits, however. divisive clustering algorithm contains option (bb.selection = “reg.”) identify clusters traits share regional association , avoiding alignment phase therefore colocalization assessment. function therefore allows us assess evidence plieotropy subsets (.e. clusters) traits. Clusters regionally associated traits identified regional association probability user defined threshold (default \\(P_{R}^{\\ast}= 0.5\\), likely anti-conservative therefore increased). example, assess evidence regional associations traits sample dataset set threshold regional association probability \\(0.9\\): results indicate exists one snps share associations traits 1-5, result anticipated results previous colocalization analysis. However, avoiding colocalization assessment identify traits 6-10 appear shared association least one snp, likely shared snp rs12117612 explains 31.4% regional association probability. contrasts results earlier colocalization assessment indicated traits 6-10 colocalize highlights distinction traits shared genetic associations (PheWAS) colocalize single causal variant. final point note, regional association statistic computed much smaller number causal configurations full colocalization assessment. upshot Bayesian divisive clustering algorithm, using regional statistic, can rapidly identify clusters traits shared genetic associations amongst large numbers traits. example, try employing regional assessment dataset 1000 traits build later vignette. can also assess sensitivity results choice regional threshold using “sensitivity.plot” function, introduce next section.","code":"ptm <- proc.time() res <- hyprcoloc(betas, ses, trait.names = traits, snp.id = rsid, bb.selection = \"reg.only\", reg.thresh = 0.9) proc.time() - ptm #>    user  system elapsed  #>    0.05    0.00    0.05 res #> $results #>   iteration              traits posterior_prob regional_prob candidate_snp #> 1         1  T1, T2, T3, T4, T5              0        1.0000    rs11591147 #> 2         2 T6, T7, T8, T9, T10              0        0.9473    rs12117612 #>   posterior_explained_by_snp dropped_trait #> 1                     1.0000            NA #> 2                     0.3137            NA #>  #> attr(,\"class\") #> [1] \"hyprcoloc\""},{"path":"https://jrs95.github.io/hyprcoloc/articles/hyprcoloc.html","id":"analysing-large-numbers-of-traits","dir":"Articles","previous_headings":"","what":"Analysing large numbers of traits","title":"HyPrColoc","text":"common question asked : can HyPrColoc jointly quickly analyse hundreds thousands traits? seen previous section, assessing stability clusters putatively colocalized traits simple task problem can become difficult number traits consideration increases. approach assessing sensitivity results choice prior parameters, well evidential strength, whether analyse 10 traits 1000. Given , focus demonstrating ability HyPrColoc identify clusters colocalized traits 100 1000 traits. replicating test dataset 10 traits first 10 times: build dataset 100 traits traits 1-50 form cluster colocalized traits, traits 51-80 form second cluster colocalized traits finally traits 81-100 form third cluster colocalized traits, e.g. several points note: () HyPrColoc correctly identified three clusters colocalized traits; (ii) borrowing strength across (colocalized) traits, posterior probability explained candidate snps increased meaning incresed confidence identified underlying causal variant (one perfect LD ) ; (iii) HyPrColoc 1 second. Let’s thing 1000 traits, , 1000 traits HyPrColoc correctly identified three clusters colocalized traits. time, however, took longer (still 1 minute). length time algorithm takes depends complexity clustering traits. therefore much dependent region traits consideration. Notice posterior probability colocalization dropped quite lot clusters 2 3 analysing 1000 traits. feature assessing large numbers traits jointly Bayesian framework, discuss nuance detail HyPrColoc text. final point note, notice posterior probability explained candidate snps clusters 2 3 ‘maximized’. , know previous assessment credible sets snps, clusters, candidate snp cluster 2 perfect LD one snp. cluster 3, candidate snp perfect LD four snps. Hence, maximum evidential support single causal snp clusters 2 3 can 50% 20% respectively, identify analysis.","code":"# 100 traits # beta100 replicates the betas for clusters 1, 2 and 3 10 times traits100 <- paste0(\"T\", 1:100) betas100 <- ses100 <- NULL clusters <- c(1, 2, 3) clst.traits <- list(1:5, 6:8, 9:10) times <- 10 for (c in clusters) {   tmp.betas <- tmp.ses <- NULL   traits <- clst.traits[[c]]   for (i in 1:times) {     tmp.betas <- cbind(tmp.betas, betas[, traits])     tmp.ses <- cbind(tmp.ses, ses[, traits])   }   betas100 <- cbind(betas100, tmp.betas)   ses100 <- cbind(ses100, tmp.ses) } ptm <- proc.time() res <- hyprcoloc(betas100, ses100, trait.names = traits100, snp.id = rsid) proc.time() - ptm #>    user  system elapsed  #>    0.80    0.09    0.91 # print the number of traits in each cluster clusters <- which(!is.na(res$results$traits)) for (c in clusters) {   traits <- unlist(strsplit(res$results$traits[c], split = \", \"))   head.traits <- head(traits)   tail.traits <- tail(traits)   # print the head and tail of the traits in each cluster   print(paste0(\"cluster \", c, \" contains \", length(traits), \" traits\"))   print(\"#####\")   print(c(head.traits, \"...\", tail.traits))   print(\"#####\") } #> [1] \"cluster 1 contains 50 traits\" #> [1] \"#####\" #>  [1] \"T1\"  \"T2\"  \"T3\"  \"T4\"  \"T5\"  \"T6\"  \"...\" \"T45\" \"T46\" \"T47\" \"T48\" \"T49\" #> [13] \"T50\" #> [1] \"#####\" #> [1] \"cluster 2 contains 30 traits\" #> [1] \"#####\" #>  [1] \"T51\" \"T52\" \"T53\" \"T54\" \"T55\" \"T56\" \"...\" \"T75\" \"T76\" \"T77\" \"T78\" \"T79\" #> [13] \"T80\" #> [1] \"#####\" #> [1] \"cluster 3 contains 20 traits\" #> [1] \"#####\" #>  [1] \"T81\"  \"T82\"  \"T83\"  \"T84\"  \"T85\"  \"T86\"  \"...\"  \"T95\"  \"T96\"  \"T97\"  #> [11] \"T98\"  \"T99\"  \"T100\" #> [1] \"#####\" # 1000 traits traits1000 <- paste0(\"T\", 1:1000) betas1000 <- ses1000 <- NULL clusters <- c(1, 2, 3) clst.traits <- list(1:5, 6:8, 9:10) times <- 100 for (c in clusters) {   tmp.betas <- tmp.ses <- NULL   traits <- clst.traits[[c]]   for (i in 1:times) {     tmp.betas <- cbind(tmp.betas, betas[, traits])     tmp.ses <- cbind(tmp.ses, ses[, traits])   }   betas1000 <- cbind(betas1000, tmp.betas)   ses1000 <- cbind(ses1000, tmp.ses) } ptm <- proc.time() res <- hyprcoloc(betas1000, ses1000, trait.names = traits1000, snp.id = rsid) proc.time() - ptm #>    user  system elapsed  #>   52.29    5.19   57.75 # print the number of traits in each cluster # print the number of traits in each cluster clusters <- which(!is.na(res$results$traits)) for (c in clusters) {   traits <- unlist(strsplit(res$results$traits[c], split = \", \"))   head.traits <- head(traits)   tail.traits <- tail(traits)   # print the head and tail of the traits in each cluster   print(paste0(\"cluster \", c, \" contains \", length(traits), \" traits\"))   print(\"#####\")   print(c(head.traits, \"...\", tail.traits))   print(\"#####\") } #> [1] \"cluster 1 contains 500 traits\" #> [1] \"#####\" #>  [1] \"T1\"   \"T2\"   \"T3\"   \"T4\"   \"T5\"   \"T6\"   \"...\"  \"T495\" \"T496\" \"T497\" #> [11] \"T498\" \"T499\" \"T500\" #> [1] \"#####\" #> [1] \"cluster 2 contains 300 traits\" #> [1] \"#####\" #>  [1] \"T501\" \"T502\" \"T503\" \"T504\" \"T505\" \"T506\" \"...\"  \"T795\" \"T796\" \"T797\" #> [11] \"T798\" \"T799\" \"T800\" #> [1] \"#####\" #> [1] \"cluster 3 contains 200 traits\" #> [1] \"#####\" #>  [1] \"T801\"  \"T802\"  \"T803\"  \"T804\"  \"T805\"  \"T806\"  \"...\"   \"T995\"  \"T996\"  #> [10] \"T997\"  \"T998\"  \"T999\"  \"T1000\" #> [1] \"#####\""},{"path":"https://jrs95.github.io/hyprcoloc/articles/hyprcoloc.html","id":"analysing-correlated-traits","dir":"Articles","previous_headings":"","what":"Analysing correlated traits","title":"HyPrColoc","text":"interest lies identifying colocalization across set traits whose summary data correlated (due overlapping participants) three additional pieces information required: () matrix containing putative correlation traits; (ii) matrix containing LD snps region ; (iii) matrix containing proportion shared participants pair studies. Note matrix overlapping sample proportions diagonal elements set 1 diagonal elements \\((,j)\\) denote proportion overlap \\(\\)’th \\(j\\)’th studies, .e. N denotes total number overlapping participants \\(\\{N_{},N_{j}\\}\\) denote numbers participants \\(\\)’th \\(j\\)’th studies respectively, \\(N/\\left(N_{}N_{j}\\right)\\) \\((,j)=(j,)\\) element. sample overlap information may always available, HyPrColoc defaults assumes studies participants.","code":""},{"path":"https://jrs95.github.io/hyprcoloc/articles/hyprcoloc.html","id":"important-before-going-further","dir":"Articles","previous_headings":"Analysing correlated traits","what":"Important, before going further…","title":"HyPrColoc","text":"Question: analyses adjusted observed correlation study summary data? recommendation users first consider whether adjusting observed correlation summary data necessary. detail several points consider. Traits strongly correlated general likely colocalize. two important consequences: () whilst special exceptions exist, generally -priori probability colocalization two strongly correlated traits necessarily larger two traits weakly correlated, analyses ignore less likely capture largest set traits truley colocalized (see HyPrColoc text ) consequently; (ii) subset cluster traits truley colocalize identified, possible (moreover likely) one correlated traits wrongly removed cluster due mathematical subtleties inverting correlation matrix (estimate posterior probability colocalization), underlying biological importance one traits another. something discussion point example (ii), let’s suppose interest lies assessing diastolic blood pressure (DBP) systolic blood pressure (SBP), two strongly correlated traits, coronary heart disease. Suppose perform joint analysis three traits accounts correlation summary data, -priori trait correlation. Suppose identify region SBP CHD colocalize . conclude? assume findings provide evidence toward SBP important blood pressure trait CHD risk region? Now suppose question result performing two separate colocalization analyses () including SBP CHD ; (ii) including DBP CHD . findings reveal region CHD colocalizes SBP separately colocalizes DBP snp. conclusion? important blood pressure trait ? Well, demonstrate HyPrColoc supplementary material analyses account ‘known’, .e. -priori, trait correlation upweighting prior probability colocalization strongly correlated traits well accounting observed correlation, summary effects, HyPrColoc regularly identifies full set truly colocalized traits. , case SBP, DBP CHD, additionally accounting ‘known’ correlation SBP DBP might overcome (hypothetical) issue. difficulty approach identifying robust way incorporate ‘known’ trait correlation analyses. outstanding problem. appears can avoided however, ignoring observed -priori correlations analyses, .e. assuming independence studies traits. demonstrate strategy regularly identifies maximum number truly colocalized traits fraction computational cost analyses account correlation.","code":""},{"path":"https://jrs95.github.io/hyprcoloc/articles/hyprcoloc.html","id":"analysing-correlated-traits-continued","dir":"Articles","previous_headings":"Analysing correlated traits","what":"Analysing correlated traits, continued…","title":"HyPrColoc","text":"requires user enter trait correlation (using tetrachoric correlation technique) LD matrices.","code":"# default assumption, presented for clarity: sample.overlap <- matrix(1, dim(betas)[2], dim(betas)[2])"},{"path":"https://jrs95.github.io/hyprcoloc/articles/hyprcoloc.html","id":"variant-specific-priors","dir":"Articles","previous_headings":"Analysing correlated traits > Analysing correlated traits, continued…","what":"Variant specific priors","title":"HyPrColoc","text":"","code":"traits <- paste0(\"T\", 1:dim(betas)[2]) ptm <- proc.time() res <- hyprcoloc(betas, ses,   trait.names = traits, snp.id = rsid, trait.cor = trait.cor,   ld.matrix = ld.matrix, sample.overlap = sample.overlap, uniform.priors = FALSE ) time.corr <- proc.time() - ptm res #> $results #>   iteration             traits posterior_prob regional_prob candidate_snp #> 1         1 T1, T2, T3, T4, T5         1.0000             1    rs11591147 #> 2         2         T6, T7, T8         0.8257             1    rs12117612 #> 3         3            T9, T10         0.8944             1     rs7524677 #>   posterior_explained_by_snp dropped_trait #> 1                     1.0000            NA #> 2                     0.3535            NA #> 3                     0.0696            NA #>  #> attr(,\"class\") #> [1] \"hyprcoloc\""},{"path":"https://jrs95.github.io/hyprcoloc/articles/hyprcoloc.html","id":"conditionally-uniform-priors","dir":"Articles","previous_headings":"Analysing correlated traits > Analysing correlated traits, continued…","what":"Conditionally uniform priors","title":"HyPrColoc","text":"","code":"res <- hyprcoloc(betas, ses,   trait.names = traits, snp.id = rsid, trait.cor = trait.cor,   ld.matrix = ld.matrix, sample.overlap = sample.overlap, uniform.priors = TRUE ) res #> $results #>   iteration             traits posterior_prob regional_prob candidate_snp #> 1         1 T1, T2, T3, T4, T5         1.0000             1    rs11591147 #> 2         2         T6, T7, T8         0.9744             1    rs12117612 #> 3         3            T9, T10         0.9782             1     rs7524677 #>   posterior_explained_by_snp dropped_trait #> 1                     1.0000            NA #> 2                     0.3535            NA #> 3                     0.0696            NA #>  #> attr(,\"class\") #> [1] \"hyprcoloc\""},{"path":"https://jrs95.github.io/hyprcoloc/articles/hyprcoloc.html","id":"assuming-independence-which-correctly-captures-the-data-generating-model","dir":"Articles","previous_headings":"Analysing correlated traits > Analysing correlated traits, continued…","what":"Assuming independence (which correctly captures the data generating model)","title":"HyPrColoc","text":"Recall incorrectly assumed traits measured studies overlapping participants, correctly detected traits 1-5; traits 6-8 traits 9-10 form three clusters colocalized traits moreover identified fraction computational cost accounting correlations summary data Thus, assuming independence studies correctly identifies three clusters colocalized traits, around 3500 times faster accounting non-indepdence.","code":"ptm <- proc.time() res <- hyprcoloc(betas, ses, trait.names = traits, snp.id = rsid) time.ind <- proc.time() - ptm time.ind #>    user  system elapsed  #>    0.03    0.00    0.03 time.corr #>    user  system elapsed  #>   33.97    0.23   34.28"},{"path":"https://jrs95.github.io/hyprcoloc/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Christopher Foley. Author, maintainer. James Staley. Author, contributor.","code":""},{"path":"https://jrs95.github.io/hyprcoloc/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Foley C, Staley J, Green P, Sun B, Kirk P, Burgess S, Howson J (2021). “fast efficient colocalization algorithm identifying shared genetic risk factors across multiple traits.” Nature Communications, 12(1), 764. doi:10.1038/s41467-020-20885-8.","code":"@Article{hyprcoloc,   author = {C.N. Foley and J.R. Staley and P.G. Green and B.B. Sun and P.D.W. Kirk and S. Burgess and J.M.M. Howson},   title = {A fast and efficient colocalization algorithm for identifying shared genetic risk factors across multiple traits},   year = {2021},   doi = {10.1038/s41467-020-20885-8},   journal = {Nature Communications},   volume = {12},   number = {1},   pages = {764}, }"},{"path":"https://jrs95.github.io/hyprcoloc/index.html","id":"hyprcoloc-","dir":"","previous_headings":"","what":"Hypothesis Prioritisation in multi-trait Colocalization (HyPrColoc) ","title":"Hypothesis Prioritisation in multi-trait Colocalization (HyPrColoc) ","text":"Hypothesis Prioritisation multi-trait Colocalization (HyPrColoc). Genome-wide association studies (GWAS) identified thousands genomic regions affecting complex diseases. next challenge elucidate causal genes mechanisms involved. One approach use statistical colocalization assess shared genetic aetiology across multiple related traits (e.g. molecular traits, metabolic pathways complex diseases) identify causal pathways, prioritize causal variants evaluate pleiotropy. HyPrColoc efficient deterministic Bayesian divisive clustering algorithm using GWAS summary statistics can detect colocalization across vast numbers traits simultaneously.","code":""},{"path":"https://jrs95.github.io/hyprcoloc/index.html","id":"function","dir":"","previous_headings":"","what":"Function","title":"Hypothesis Prioritisation in multi-trait Colocalization (HyPrColoc) ","text":"hyprcoloc: identifies clusters colocalized traits candidate causal SNPs using HyPrColoc Bayesian divisive clustering algorithm.","code":""},{"path":"https://jrs95.github.io/hyprcoloc/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Hypothesis Prioritisation in multi-trait Colocalization (HyPrColoc) ","text":"","code":"install.packages(\"remotes\") remotes::install_version(\"RcppEigen\", version = \"0.3.3.9.3\") remotes::install_github(\"jrs95/hyprcoloc\", build_vignettes = TRUE)"},{"path":"https://jrs95.github.io/hyprcoloc/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Hypothesis Prioritisation in multi-trait Colocalization (HyPrColoc) ","text":"","code":"# Regression coefficients from ten studies (Traits 1-5, 6-8 & 9-10 colocalize) betas <- hyprcoloc::test.betas head(betas) ses <- hyprcoloc::test.ses head(ses)  # Trait names and SNP IDs traits <- paste0(\"T\", 1:10) rsid <- rownames(betas)  # Colocalization analysis hyprcoloc(betas, ses, trait.names = traits, snp.id = rsid)"},{"path":"https://jrs95.github.io/hyprcoloc/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Hypothesis Prioritisation in multi-trait Colocalization (HyPrColoc) ","text":"Foley CN, Staley JR, et al. fast efficient colocalization algorithm identifying shared genetic risk factors across multiple traits. Nat Commun 2021;12(1):764.","code":""},{"path":"https://jrs95.github.io/hyprcoloc/reference/align.ABF.1.html","id":null,"dir":"Reference","previous_headings":"","what":"align.ABF.1 — align.ABF.1","title":"align.ABF.1 — align.ABF.1","text":"align.ABF.1","code":""},{"path":"https://jrs95.github.io/hyprcoloc/reference/align.ABF.1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"align.ABF.1 — align.ABF.1","text":"","code":"align.ABF.1(   Z,   W,   trait.cor,   sample.overlap,   ld.matrix,   epsilon,   reg.res,   align.thresh,   prior.1,   prior.2,   cor.adj.priors,   uniform.priors,   Zsq,   Wsq,   ind.traits )"},{"path":"https://jrs95.github.io/hyprcoloc/reference/align.ABF.1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"align.ABF.1 — align.ABF.1","text":"Z matrix Z-scores W ratio matrix prior standard deviation observed standard errors trait.cor correlation matrix traits sample.overlap matrix sample overlap traits ld.matrix LD matrix epsilon tolerance parameter reg.res regional result align.thresh alignment probability threshold prior.1 prior probability SNP associated one trait prior.2 1 - prior probability SNP associated additional trait given SNP associated least 1 trait cor.adj.priors correlation adjusted priors uniform.priors uniform priors Zsq matrix Z-scores squared Wsq matrix W squared ind.traits traits independent treated independent","code":""},{"path":"https://jrs95.github.io/hyprcoloc/reference/align.ABF.2.html","id":null,"dir":"Reference","previous_headings":"","what":"align.ABF.2 — align.ABF.2","title":"align.ABF.2 — align.ABF.2","text":"align.ABF.2","code":""},{"path":"https://jrs95.github.io/hyprcoloc/reference/align.ABF.2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"align.ABF.2 — align.ABF.2","text":"","code":"align.ABF.2(   Z,   W,   snps.clc,   trait.cor,   sample.overlap,   ld.matrix,   epsilon,   reg.res,   align.thresh,   prior.1,   prior.2,   prior.3,   prior.4,   cor.adj.priors,   uniform.priors )"},{"path":"https://jrs95.github.io/hyprcoloc/reference/align.ABF.2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"align.ABF.2 — align.ABF.2","text":"Z matrix Z-scores W ratio matrix prior standard deviation observed standard errors snps.clc SNPs colocalisation trait.cor correlation matrix traits sample.overlap matrix sample overlap traits ld.matrix LD matrix epsilon tolerance parameter reg.res regional result align.thresh alignment probability threshold prior.1 prior probability SNP associated one trait prior.2 1 - prior probability SNP associated additional trait given SNP associated least 1 trait prior.3 prior probability trait contains second causal variant given contains one already prior.4 1 - prior probability trait two co-localises trait one given traits one two already share causal variant trait one contains second causal variant cor.adj.priors correlation adjusted priors uniform.priors uniform priors","code":""},{"path":"https://jrs95.github.io/hyprcoloc/reference/colMax.html","id":null,"dir":"Reference","previous_headings":"","what":"colMax — colMax","title":"colMax — colMax","text":"colMax","code":""},{"path":"https://jrs95.github.io/hyprcoloc/reference/colMax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"colMax — colMax","text":"","code":"colMax(x)"},{"path":"https://jrs95.github.io/hyprcoloc/reference/colMax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"colMax — colMax","text":"x data.frame matrix","code":""},{"path":"https://jrs95.github.io/hyprcoloc/reference/cred.sets.html","id":null,"dir":"Reference","previous_headings":"","what":"cred.sets — cred.sets","title":"cred.sets — cred.sets","text":"cred.sets","code":""},{"path":"https://jrs95.github.io/hyprcoloc/reference/cred.sets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cred.sets — cred.sets","text":"","code":"cred.sets(res, value = 0.95)"},{"path":"https://jrs95.github.io/hyprcoloc/reference/cred.sets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"cred.sets — cred.sets","text":"res list results hyprcoloc setting \"snpscores = TRUE\" value sum probabilities snps included credible set","code":""},{"path":"https://jrs95.github.io/hyprcoloc/reference/hyprcoloc.html","id":null,"dir":"Reference","previous_headings":"","what":"HyPrColoc — hyprcoloc","title":"HyPrColoc — hyprcoloc","text":"hyprcoloc function used identify clusters colocalized traits candidate causal SNPs genomic regions","code":""},{"path":"https://jrs95.github.io/hyprcoloc/reference/hyprcoloc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"HyPrColoc — hyprcoloc","text":"","code":"hyprcoloc(   effect.est,   effect.se,   binary.outcomes = rep(0, dim(effect.est)[2]),   trait.subset = c(1:dim(effect.est)[2]),   trait.names = c(1:dim(effect.est)[2]),   snp.id = c(1:dim(effect.est)[1]),   ld.matrix = diag(1, dim(effect.est)[1], dim(effect.est)[1]),   trait.cor = diag(1, dim(effect.est)[2], dim(effect.est)[2]),   sample.overlap = matrix(rep(1, dim(effect.est)[2]^2), nrow = dim(effect.est)[2]),   bb.alg = TRUE,   bb.selection = \"regional\",   reg.steps = 1,   reg.thresh = \"default\",   align.thresh = \"default\",   prior.1 = 1e-04,   prior.c = 0.02,   prior.12 = NULL,   sensitivity = FALSE,   sense.1 = 1,   sense.2 = 2,   uniform.priors = FALSE,   ind.traits = FALSE,   snpscores = FALSE )"},{"path":"https://jrs95.github.io/hyprcoloc/reference/hyprcoloc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"HyPrColoc — hyprcoloc","text":"effect.est matrix snp regression coefficients (.e. regression beta values) genomic region effect.se matrix standard errors associated beta values binary.outcomes binary vector dimension number traits: 1 represents binary trait 0 otherwise trait.subset vector trait names (number) full trait list: used trageted colocalization analysis region trait.names vector trait names corresponding columns effect.est matrix snp.id vector SNP IDs ld.matrix LD matrix trait.cor matrix pairwise correlations traits sample.overlap matrix pairwise sample overlap traits bb.alg branch bound algorithm: TRUE, employ BB algorithm; FALSE, bb.selection branch bound algorithm type, e.g. regional alignment selection reg.steps regional step paramter reg.thresh threshold probability beyond traits believed share regional association signal align.thresh threshold probability beyond traits believed align single causal variant prior.1 prior probability SNP associated one trait prior.c conditional colocalization prior: probability SNP associated additional trait given SNP associated least 1 trait prior.12 COLOC prior p12: prior probability SNP associated two traits sensitivity perform senstivity analysis sense.1 first sensitivity analysis sense.2 second sensitivity analysis uniform.priors uniform priors ind.traits traits independent treated independent snpscores output estimated posterior probability explained SNP","code":""},{"path":"https://jrs95.github.io/hyprcoloc/reference/hyprcoloc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"HyPrColoc — hyprcoloc","text":"data.frame HyPrColoc results: row cluster colocalized traits coded NA (colocalization identified) snpscores=TRUE: additionally returns list posterior probability explained SNPs cluster colocalized traits identified","code":""},{"path":"https://jrs95.github.io/hyprcoloc/reference/hyprcoloc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"HyPrColoc — hyprcoloc","text":"Christopher N Foley <chris.neal.foley@gmail.com> James R Staley <jrstaley95@gmail.com>","code":""},{"path":"https://jrs95.github.io/hyprcoloc/reference/hyprcoloc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"HyPrColoc — hyprcoloc","text":"","code":"# Regression coefficients and standard errors from ten GWAS studies # (Traits 1-5, 6-8 & 9-10 are the clusters of colocalized traits) betas <- hyprcoloc::test.betas head(betas) #>                      T1           T2            T3           T4           T5 #> rs6694014    0.02791630 -0.030353270 -0.0006508550 -0.015820079  0.029344113 #> rs11206477  -0.01333565 -0.007925434 -0.0220791782 -0.024533654 -0.006170044 #> rs978479     0.02789307 -0.031569213  0.0013910408 -0.016449156  0.030562284 #> rs6684892    0.01109516 -0.035811867 -0.0041582437 -0.001093336  0.021029899 #> rs149881092 -0.02058398  0.033028644  0.0732322501 -0.062564186  0.031519527 #> rs2081705    0.02804342 -0.031658194 -0.0006283532 -0.017953736  0.029719314 #>                      T6          T7          T8            T9         T10 #> rs6694014   -0.03739309 -0.05015619 -0.03963766 -0.0497666615 -0.01565694 #> rs11206477   0.08915364  0.08788543  0.07824464 -0.0364999498 -0.07140001 #> rs978479    -0.03667044 -0.04993080 -0.03999140 -0.0485026083 -0.01742117 #> rs6684892   -0.04342024 -0.05462565 -0.02610322 -0.0516383902 -0.01373675 #> rs149881092  0.03339484  0.08794777  0.06747322  0.0002877561 -0.01701753 #> rs2081705   -0.03798465 -0.05052849 -0.04150411 -0.0498085699 -0.01767236 ses <- hyprcoloc::test.ses head(ses) #>                     T1         T2         T3         T4         T5         T6 #> rs6694014   0.01640805 0.01601499 0.01606328 0.01595009 0.01629387 0.01602093 #> rs11206477  0.01522992 0.01486595 0.01490668 0.01480196 0.01512465 0.01484631 #> rs978479    0.01642066 0.01602706 0.01607561 0.01596228 0.01630616 0.01603341 #> rs6684892   0.01738306 0.01696379 0.01701563 0.01689661 0.01726146 0.01696989 #> rs149881092 0.03917473 0.03823671 0.03833955 0.03807307 0.03890204 0.03825441 #> rs2081705   0.01643768 0.01604368 0.01609229 0.01597868 0.01632324 0.01604975 #>                     T7         T8         T9        T10 #> rs6694014   0.01618062 0.01625153 0.01639785 0.01626775 #> rs11206477  0.01499870 0.01506721 0.01522146 0.01508189 #> rs978479    0.01619313 0.01626394 0.01641083 0.01628007 #> rs6684892   0.01713951 0.01721824 0.01737041 0.01723253 #> rs149881092 0.03863522 0.03880163 0.03916327 0.03883610 #> rs2081705   0.01620976 0.01628044 0.01642748 0.01629694  # Trait names and SNP IDs traits <- paste0(\"T\", 1:10) rsid <- rownames(betas)  # Colocalisation analyses results <- hyprcoloc(betas, ses, trait.names = traits, snp.id = rsid)"},{"path":"https://jrs95.github.io/hyprcoloc/reference/ind.snp.score.html","id":null,"dir":"Reference","previous_headings":"","what":"ind.snp.score — ind.snp.score","title":"ind.snp.score — ind.snp.score","text":"ind.snp.score","code":""},{"path":"https://jrs95.github.io/hyprcoloc/reference/ind.snp.score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ind.snp.score — ind.snp.score","text":"","code":"ind.snp.score(Q, snp.scores)"},{"path":"https://jrs95.github.io/hyprcoloc/reference/ind.snp.score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ind.snp.score — ind.snp.score","text":"Q number traits snp.scores vector per snp contributions posterior probability colocalization","code":""},{"path":"https://jrs95.github.io/hyprcoloc/reference/p.0.html","id":null,"dir":"Reference","previous_headings":"","what":"p.0 — p.0","title":"p.0 — p.0","text":"p.0","code":""},{"path":"https://jrs95.github.io/hyprcoloc/reference/p.0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"p.0 — p.0","text":"","code":"p.0(j, Q)"},{"path":"https://jrs95.github.io/hyprcoloc/reference/p.0.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"p.0 — p.0","text":"j number traits Q number SNPs","code":""},{"path":"https://jrs95.github.io/hyprcoloc/reference/print.hyprcoloc.html","id":null,"dir":"Reference","previous_headings":"","what":"Print HyPrColoc — print.hyprcoloc","title":"Print HyPrColoc — print.hyprcoloc","text":"print method class \"hyprcoloc\"","code":""},{"path":"https://jrs95.github.io/hyprcoloc/reference/print.hyprcoloc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print HyPrColoc — print.hyprcoloc","text":"","code":"print.hyprcoloc(x, ...)"},{"path":"https://jrs95.github.io/hyprcoloc/reference/print.hyprcoloc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print HyPrColoc — print.hyprcoloc","text":"x object class \"hyprcoloc\" ... arguments passed methods","code":""},{"path":"https://jrs95.github.io/hyprcoloc/reference/print.hyprcoloc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print HyPrColoc — print.hyprcoloc","text":"Christopher N Foley (University Cambridge) <chris.neal.foley@gmail.com> James R Staley (University Bristol) <jrstaley95@gmail.com>","code":""},{"path":"https://jrs95.github.io/hyprcoloc/reference/prior.html","id":null,"dir":"Reference","previous_headings":"","what":"prior — prior","title":"prior — prior","text":"prior","code":""},{"path":"https://jrs95.github.io/hyprcoloc/reference/prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"prior — prior","text":"","code":"prior(p.1, gamma, k)"},{"path":"https://jrs95.github.io/hyprcoloc/reference/prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"prior — prior","text":"p.1 probability one trait causal variant genetic region gamma step probability k number traits","code":""},{"path":"https://jrs95.github.io/hyprcoloc/reference/rapid.align.html","id":null,"dir":"Reference","previous_headings":"","what":"rapid.align — rapid.align","title":"rapid.align — rapid.align","text":"rapid.align","code":""},{"path":"https://jrs95.github.io/hyprcoloc/reference/rapid.align.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rapid.align — rapid.align","text":"","code":"rapid.align(Zsq, Wsq, prior.1, prior.2, uniform.priors)"},{"path":"https://jrs95.github.io/hyprcoloc/reference/rapid.align.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rapid.align — rapid.align","text":"Zsq matrix Z-scores Wsq ratio matrix prior standard deviation observed standard errors squared prior.1 prior probability SNP associated one trait prior.2 1 - prior probability SNP associated additional trait given SNP associated least 1 trait uniform.priors uniform priors","code":""},{"path":"https://jrs95.github.io/hyprcoloc/reference/rapid.hyprcoloc.html","id":null,"dir":"Reference","previous_headings":"","what":"rapid.hyprcoloc — rapid.hyprcoloc","title":"rapid.hyprcoloc — rapid.hyprcoloc","text":"rapid.hyprcoloc","code":""},{"path":"https://jrs95.github.io/hyprcoloc/reference/rapid.hyprcoloc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rapid.hyprcoloc — rapid.hyprcoloc","text":"","code":"rapid.hyprcoloc(Zsq, Wsq, prior.1, prior.2, uniform.priors)"},{"path":"https://jrs95.github.io/hyprcoloc/reference/rapid.hyprcoloc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rapid.hyprcoloc — rapid.hyprcoloc","text":"Zsq matrix Z-scores Wsq ratio matrix prior standard deviation observed standard errors squared prior.1 prior probability SNP associated one trait prior.2 1 - prior probability SNP associated additional trait given SNP associated least 1 trait uniform.priors uniform priors","code":""},{"path":"https://jrs95.github.io/hyprcoloc/reference/rapid.reg.html","id":null,"dir":"Reference","previous_headings":"","what":"rapid.reg — rapid.reg","title":"rapid.reg — rapid.reg","text":"rapid.reg","code":""},{"path":"https://jrs95.github.io/hyprcoloc/reference/rapid.reg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rapid.reg — rapid.reg","text":"","code":"rapid.reg(Zsq, Wsq, prior.1, prior.2, uniform.priors)"},{"path":"https://jrs95.github.io/hyprcoloc/reference/rapid.reg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rapid.reg — rapid.reg","text":"Zsq matrix Z-scores Wsq ratio matrix prior standard deviation observed standard errors squared prior.1 prior probability SNP associated one trait prior.2 1 - prior probability SNP associated additional trait given SNP associated least 1 trait uniform.priors uniform priors","code":""},{"path":"https://jrs95.github.io/hyprcoloc/reference/regional.ABF.html","id":null,"dir":"Reference","previous_headings":"","what":"regional.ABF — regional.ABF","title":"regional.ABF — regional.ABF","text":"regional.ABF","code":""},{"path":"https://jrs95.github.io/hyprcoloc/reference/regional.ABF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"regional.ABF — regional.ABF","text":"","code":"regional.ABF(   Z,   W,   snps.clc,   rho,   trait.cor,   sample.overlap,   epsilon,   reg.thresh,   prior.1,   prior.2,   prior.3,   prior.4,   flag,   test.2,   reg.steps,   cor.adj.priors,   uniform.priors,   branch.jump,   Zsq,   Wsq,   ind.traits )"},{"path":"https://jrs95.github.io/hyprcoloc/reference/regional.ABF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"regional.ABF — regional.ABF","text":"Z matrix Z-scores W ratio matrix prior standard deviation observed standard errors snps.clc SNPs colocalisation rho LD matrix trait.cor correlation matrix traits sample.overlap matrix sample overlap traits epsilon tolerance parameter reg.thresh regional probability threshold prior.1 prior probability SNP associated one trait prior.2 1 - prior probability SNP associated additional trait given SNP associated least 1 trait prior.3 prior probability trait contains second causal variant given contains one already prior.4 1 - prior probability trait two co-localises trait one given traits one two already share causal variant trait one contains second causal variant flag flag variable test.2 test 2CV reg.steps regional step paramter cor.adj.priors correlation adjusted priors uniform.priors uniform priors branch.jump branch jump Zsq matrix Z-scores squared Wsq matrix W squared ind.traits traits independent treated independent","code":""},{"path":"https://jrs95.github.io/hyprcoloc/reference/samp.reduc.html","id":null,"dir":"Reference","previous_headings":"","what":"samp.reduc — samp.reduc","title":"samp.reduc — samp.reduc","text":"samp.reduc","code":""},{"path":"https://jrs95.github.io/hyprcoloc/reference/samp.reduc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"samp.reduc — samp.reduc","text":"","code":"samp.reduc(   Z,   W,   ld.matrix,   trait.cor,   sample.overlap,   trts,   window.size = dim(Z)[1],   sentinel = 0,   Zsq,   Wsq )"},{"path":"https://jrs95.github.io/hyprcoloc/reference/samp.reduc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"samp.reduc — samp.reduc","text":"Z matrix Z-scores W ratio matrix prior standard deviation observed standard errors ld.matrix LD matrix trait.cor correlation matrix traits sample.overlap matrix sample overlap traits trts vector traits window.size size window 2CV testing sentinel sentinel variant Zsq matrix Z-scores squared Wsq matrix W squared","code":""},{"path":"https://jrs95.github.io/hyprcoloc/reference/sensitivity.plot.html","id":null,"dir":"Reference","previous_headings":"","what":"sensitivity.plot — sensitivity.plot","title":"sensitivity.plot — sensitivity.plot","text":"sensitivity.plot function repeatedly calls hyprcoloc function compute similarity matrix illustrates strongly clustered/colocalized pairs traits across different input thresholds priors","code":""},{"path":"https://jrs95.github.io/hyprcoloc/reference/sensitivity.plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sensitivity.plot — sensitivity.plot","text":"","code":"sensitivity.plot(   effect.est,   effect.se,   binary.outcomes = rep(0, dim(effect.est)[2]),   trait.subset = c(1:dim(effect.est)[2]),   trait.names = c(1:dim(effect.est)[2]),   snp.id = c(1:dim(effect.est)[1]),   ld.matrix = diag(1, dim(effect.est)[1], dim(effect.est)[1]),   trait.cor = diag(1, dim(effect.est)[2], dim(effect.est)[2]),   sample.overlap = matrix(rep(1, dim(effect.est)[2]^2), nrow = dim(effect.est)[2]),   bb.alg = TRUE,   bb.selection = \"regional\",   reg.steps = 1,   reg.thresh = c(0.6, 0.7, 0.8, 0.9),   align.thresh = c(0.6, 0.7, 0.8, 0.9),   prior.1 = 1e-04,   prior.c = c(0.02, 0.01, 0.005),   prior.12 = NULL,   uniform.priors = FALSE,   ind.traits = TRUE,   equal.thresholds = FALSE,   similarity.matrix = FALSE )"},{"path":"https://jrs95.github.io/hyprcoloc/reference/sensitivity.plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sensitivity.plot — sensitivity.plot","text":"effect.est matrix snp regression coefficients (.e. regression beta values) genomic region effect.se matrix standard errors associated beta values binary.outcomes binary vector dimension number traits: 1 represents binary trait 0 otherwise trait.subset vector trait names (number) full trait list: used trageted colocalization analysis region trait.names vector trait names corresponding columns effect.est matrix snp.id vector SNP IDs ld.matrix LD matrix trait.cor matrix pairwise correlations traits sample.overlap matrix pairwise sample overlap traits bb.alg branch bound algorithm: TRUE, employ BB algorithm; FALSE, bb.selection branch bound algorithm type, e.g. regional alignment selection reg.steps regional step paramter reg.thresh vector regional probability thresholds align.thresh vector alignment probability thresholds prior.1 prior probability SNP associated one trait prior.c vector conditional colocalization priors: prior.c probability SNP associated additional trait given SNP associated least 1 trait prior.12 COLOC prior p12: prior probability SNP associated two traits uniform.priors uniform priors ind.traits traits independent treated independent equal.thresholds fix regional alignment thresholds equal similarity.matrix viewed similarity matrix. Default FALSE.","code":""},{"path":"https://jrs95.github.io/hyprcoloc/news/index.html","id":"hyprcoloc-002","dir":"Changelog","previous_headings":"","what":"hyprcoloc 0.0.2","title":"hyprcoloc 0.0.2","text":"Add pkgdown website Update R code using styler","code":""},{"path":"https://jrs95.github.io/hyprcoloc/news/index.html","id":"hyprcoloc-001","dir":"Changelog","previous_headings":"","what":"hyprcoloc 0.0.1","title":"hyprcoloc 0.0.1","text":"Initial version R package","code":""}]
